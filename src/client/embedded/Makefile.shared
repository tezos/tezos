
all: \
  ../client_embedded_$(PROTO_VERSION).cmx

-include ../../../Makefile.local
include ../../../Makefile.config

NODE_DIRECTORIES = \
  $(addprefix ../../../, \
    environment \
    minutils \
    utils \
    node/updater \
    node/db \
    node/net \
    node/shell \
    client \
)

SOURCE_DIRECTORIES += \
  ${NODE_DIRECTORIES} \
  ../../../proto

OPENED_MODULES := \
  Error_monad \
  Hash \
  Tezos_data

OBJS := \
  ${CLIENT_IMPLS:.ml=.cmx} ${CLIENT_INTFS:.mli=.cmi}
OBJS_DEPS := \
   ${CLIENT_IMPLS:.ml=.ml.deps} ${CLIENT_INTFS:.mli=.mli.deps}

${OBJS} ${OBJS_DEPS}: TARGET="(client_embedded_$(PROTO_VERSION).cmx)"
${OBJS}: EXTRA_OCAMLFLAGS = -for-pack Client_embedded_$(PROTO_VERSION)
../client_embedded_$(PROTO_VERSION).cmx: EXTRA_OCAMLFLAGS =
${OBJS} ${OBJS_DEPS} ../client_embedded_$(PROTO_VERSION).cmx: \
  PACKAGES=lwt ocplib-json-typed sodium ocplib-ocamlres uutf ocplib-endian zarith
${OBJS} ${OBJS_DEPS} ../client_embedded_$(PROTO_VERSION).cmx: \
  ../../../proto/tezos_embedded_protocol_${PROTO_VERSION}.cmx

../client_embedded_$(PROTO_VERSION).cmx: $(patsubst %.ml, %.cmx, ${CLIENT_IMPLS})
	@echo LINK $(notdir $@)
	@$(OCAMLOPT) -linkall ${OCAMLFLAGS} -pack -o $@ \
	   $(patsubst %.ml, %.cmx, ${CLIENT_IMPLS})

%.cmx: %.ml
	@echo OCAMLOPT ${TARGET} $(notdir $@)
	@$(OCAMLOPT) ${OCAMLFLAGS} -c $<

%.cmo: %.ml
	@echo OCAMLC ${TARGET} $(notdir $@)
	@$(OCAMLC) ${OCAMLFLAGS} -c $<

%.cmi: %.mli
	@echo OCAMLOPT ${TARGET} $(notdir $@)
	@$(OCAMLOPT) ${OCAMLFLAGS} -c $<

.PHONY: clean
clean::
	-rm -f ../client_embedded_$(PROTO_VERSION).cm* ../client_embedded_$(PROTO_VERSION).o
	-rm -f *.cm* *~ *.o *.a *.deps *.deps.byte
	-rm -rf _tzbuild
	-rm -f .depend

ifneq ($(MAKECMDGOALS),clean)
include .depend
endif

predepend:

DEPENDS += \
  $(patsubst %,%.deps,${CLIENT_INTFS} ${CLIENT_IMPLS})
DEPENDS := $(filter-out ${NODEPENDS}, ${DEPENDS})

.SECONDARY: ${DEPENDS}

.depend: ${DEPENDS}
	@cat $^ > .depend

%.ml.deps: %.ml | predepend
	@echo OCAMLDEP ${TARGET} $(notdir $<)
	@$(OCAMLDEP) -native $(INCLUDES) ${EXTRA_OCAMLFLAGS} $< > $@

%.mli.deps: %.mli | predepend
	@echo OCAMLDEP ${TARGET} $(notdir $<)
	@$(OCAMLDEP) -native $(INCLUDES) ${EXTRA_OCAMLFLAGS} $< > $@

%.ml.deps.byte: %.ml | predepend
	@echo OCAMLDEP ${TARGET} $(notdir $<)
	@$(OCAMLDEP) $(INCLUDES) ${EXTRA_OCAMLFLAGS} $< > $@

%.mli.deps.byte: %.mli | predepend
	@echo OCAMLDEP ${TARGET} $(notdir $<)
	@$(OCAMLDEP) $(INCLUDES) ${EXTRA_OCAMLFLAGS} $< > $@
